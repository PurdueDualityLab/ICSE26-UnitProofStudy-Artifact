HARNESS_ENTRY = harness
HARNESS_FILE = _rbuf_add_harness

# This should be a unique identifier for this proof, and will appear on the
# Litani dashboard. It can be human-readable and contain spaces if you wish.
PROOF_UID = _rbuf_add
# sys/include/net/gnrc/netif/hdr.h
DEFINES += -DGNRC_NETTYPE_SIXLOWPAN=1 -DMODULE_GNRC_SIXLOWPAN_FRAG=1 -DMODULE_GNRC_SIXLOWPAN_FRAG_SFR=1 \
            -DMODULE_GNRC_SIXLOWPAN_FRAG_MINFWD=1 -DCONFIG_GNRC_SIXLOWPAN_FRAG_RBUF_SIZE=1 \
            -DMODULE_GNRC_SIXLOWPAN_IPHC=1

INCLUDES += -I$(SRCDIR) -I$(SRCDIR)/sys/include/  \
            -I$(SRCDIR)/core/lib/include/  \
            -I$(SRCDIR)/core/include/  \
            -I$(SRCDIR)/cpu/native/include/  \
            -I$(SRCDIR)/drivers/include/  \
            -I$(SRCDIR)/boards/native/include/  \

REMOVE_FUNCTION_BODY +=
UNWINDSET += gnrc_sixlowpan_frag_rb_gc.2:2
UNWINDSET += _rbuf_get.2:2
UNWINDSET += _rbuf_int_get_free.2:2
UNWINDSET += gnrc_pkt_delete.0:2
UNWINDSET += _check_fragments.1:2

PROOF_SOURCES += $(PROOFDIR)/$(HARNESS_FILE).c
PROJECT_SOURCES += $(SRCDIR)/sys/net/gnrc/network_layer/sixlowpan/frag/rb/gnrc_sixlowpan_frag_rb.c

# If this proof is found to consume huge amounts of RAM, you can set the
# EXPENSIVE variable. With new enough versions of the proof tools, this will
# restrict the number of EXPENSIVE CBMC jobs running at once. See the
# documentation in Makefile.common under the "Job Pools" heading for details.
# EXPENSIVE = true

# If you require access to a file-local ("static") function or object to conduct
# your proof, set the following (and do not include the original source file
# ("sys/net/gnrc/network_layer/sixlowpan/frag/rb/gnrc_sixlowpan_frag_rb.c") in PROJECT_SOURCES).
# REWRITTEN_SOURCES = $(PROOFDIR)/<__SOURCE_FILE_BASENAME__>.i
# include ../Makefile.common
# $(PROOFDIR)/<__SOURCE_FILE_BASENAME__>.i_SOURCE = $(SRCDIR)/sys/net/gnrc/network_layer/sixlowpan/frag/rb/gnrc_sixlowpan_frag_rb.c
# $(PROOFDIR)/<__SOURCE_FILE_BASENAME__>.i_FUNCTIONS = foo bar
# $(PROOFDIR)/<__SOURCE_FILE_BASENAME__>.i_OBJECTS = baz
# Care is required with variables on the left-hand side: REWRITTEN_SOURCES must
# be set before including Makefile.common, but any use of variables on the
# left-hand side requires those variables to be defined. Hence, _SOURCE,
# _FUNCTIONS, _OBJECTS is set after including Makefile.common.

include ../Makefile.common
